SSHM-bM-^@M-^PAGENT(1)              BSD General Commands Manual             SSHM-bM-^@M-^PAGENT(1)

^[[1mNAME^[[0m
     ^[[1msshM-bM-^@M-^Pagent ^[[22mM-bMM-^R authentication agent

^[[1mSYNOPSIS^[[0m
     ^[[1msshM-bM-^@M-^Pagent ^[[22m[^[[1mM-bMM-^Ra ^[[4m^[[22mbind_address^[[24m] [^[[1mM-bMM-^Rc ^[[22m| ^[[1mM-bMM-^Rs^[[22m] [^[[1mM-bMM-^Rt ^[[4m^[[22mlife^[[24m] [^[[1mM-bMM-^Rd^[[22m] [^[[4mcommand^[[24m [^[[4margs^[[24m ^[[4m...^[[24m]]
     ^[[1msshM-bM-^@M-^Pagent ^[[22m[^[[1mM-bMM-^Rc ^[[22m| ^[[1mM-bMM-^Rs^[[22m] ^[[1mM-bMM-^Rk^[[0m

^[[1mDESCRIPTION^[[0m
     ^[[1msshM-bM-^@M-^Pagent ^[[22mis a program to hold private keys used for public key authentiM-bM-^@M-^P
     cation (RSA, DSA).  The idea is that ^[[1msshM-bM-^@M-^Pagent ^[[22mis started in the beginM-bM-^@M-^P
     ning of an XM-bM-^@M-^Psession or a login session, and all other windows or proM-bM-^@M-^P
     grams are started as clients to the sshM-bM-^@M-^Pagent program.  Through use of
     environment variables the agent can be located and automatically used for
     authentication when logging in to other machines using ssh(1).

     The options are as follows:

     ^[[1mM-bMM-^Ra ^[[4m^[[22mbind_address^[[0m
             Bind the agent to the unixM-bM-^@M-^Pdomain socket ^[[4mbind_address^[[24m.  The
             default is ^[[4m/tmp/sshM-bM-^@M-^PXXXXXXXX/agent.<ppid>^[[24m.

     ^[[1mM-bMM-^Rc      ^[[22mGenerate CM-bM-^@M-^Pshell commands on stdout.  This is the default if
             SHELL looks like itM-bM-^@M-^Ys a csh style of shell.

     ^[[1mM-bMM-^Rs      ^[[22mGenerate Bourne shell commands on stdout.  This is the default if
             SHELL does not look like itM-bM-^@M-^Ys a csh style of shell.

     ^[[1mM-bMM-^Rk      ^[[22mKill the current agent (given by the SSH_AGENT_PID environment
             variable).

     ^[[1mM-bMM-^Rt ^[[4m^[[22mlife^[[0m
             Set a default value for the maximum lifetime of identities added
             to the agent.  The lifetime may be specified in seconds or in a
             time format specified in sshd(8).  A lifetime specified for an
             identity with sshM-bM-^@M-^Padd(1) overrides this value.  Without this
             option the default maximum lifetime is forever.

     ^[[1mM-bMM-^Rd      ^[[22mDebug mode.  When this option is specified ^[[1msshM-bM-^@M-^Pagent ^[[22mwill not
             fork.

     If a commandline is given, this is executed as a subprocess of the agent.
     When the command dies, so does the agent.

     The agent initially does not have any private keys.  Keys are added using
     sshM-bM-^@M-^Padd(1).  When executed without arguments, sshM-bM-^@M-^Padd(1) adds the files
     ^[[4m$HOME/.ssh/id_rsa^[[24m, ^[[4m$HOME/.ssh/id_dsa^[[24m and ^[[4m$HOME/.ssh/identity^[[24m.  If the
     identity has a passphrase, sshM-bM-^@M-^Padd(1) asks for the passphrase (using a
     small X11 application if running under X11, or from the terminal if runM-bM-^@M-^P
     ning without X).  It then sends the identity to the agent.  Several idenM-bM-^@M-^P
     tities can be stored in the agent; the agent can automatically use any of
     these identities.  ^[[1msshM-bM-^@M-^Padd M-bM-^@M-^Pl ^[[22mdisplays the identities currently held by
     the agent.

     The idea is that the agent is run in the userM-bM-^@M-^Ys local PC, laptop, or terM-bM-^@M-^P
     minal.  Authentication data need not be stored on any other machine, and
     authentication passphrases never go over the network.  However, the conM-bM-^@M-^P
     nection to the agent is forwarded over SSH remote logins, and the user
     can thus use the privileges given by the identities anywhere in the netM-bM-^@M-^P
     work in a secure way.

     There are two main ways to get an agent setup: Either the agent starts a
     new subcommand into which some environment variables are exported, or the
     agent prints the needed shell commands (either sh(1) or csh(1) syntax can
     be generated) which can be evalled in the calling shell.  Later ssh(1)
     looks at these variables and uses them to establish a connection to the
     agent.

     The agent will never send a private key over its request channel.
     Instead, operations that require a private key will be performed by the
     agent, and the result will be returned to the requester.  This way, priM-bM-^@M-^P
     vate keys are not exposed to clients using the agent.

     A unixM-bM-^@M-^Pdomain socket is created and the name of this socket is stored in
     the SSH_AUTH_SOCK environment variable.  The socket is made accessible
     only to the current user.  This method is easily abused by root or
     another instance of the same user.

     The SSH_AGENT_PID environment variable holds the agentM-bM-^@M-^Ys process ID.

     The agent exits automatically when the command given on the command line
     terminates.

^[[1mFILES^[[0m
     $HOME/.ssh/identity
             Contains the protocol version 1 RSA authentication identity of
             the user.

     $HOME/.ssh/id_dsa
             Contains the protocol version 2 DSA authentication identity of
             the user.

     $HOME/.ssh/id_rsa
             Contains the protocol version 2 RSA authentication identity of
             the user.

     /tmp/sshM-bM-^@M-^PXXXXXXXX/agent.<ppid>
             UnixM-bM-^@M-^Pdomain sockets used to contain the connection to the authenM-bM-^@M-^P
             tication agent.  These sockets should only be readable by the
             owner.  The sockets should get automatically removed when the
             agent exits.

^[[1mAUTHORS^[[0m
     OpenSSH is a derivative of the original and free ssh 1.2.12 release by
     Tatu Ylonen.  Aaron Campbell, Bob Beck, Markus Friedl, Niels Provos, Theo
     de Raadt and Dug Song removed many bugs, reM-bM-^@M-^Padded newer features and creM-bM-^@M-^P
     ated OpenSSH.  Markus Friedl contributed the support for SSH protocol
     versions 1.5 and 2.0.

^[[1mSEE ALSO^[[0m
     ssh(1), sshM-bM-^@M-^Padd(1), sshM-bM-^@M-^Pkeygen(1), sshd(8)

BSD                           September 25, 1999                           BSD
